import itertools
import math

INPUT = """BBFFFBFRLL
FBBBBBFLRL
FBBFBBBLRR
FFBBFFBLLR
FFBBFFFRLL
BBFBBFFLRL
BBFFBBBRLR
BFFBFBFLRL
FBFFFBBRLL
FFFBFBBRLL
BBFBBFFRRR
FBFFBFFRRR
FFBBBFBLLL
BBFBFBFRLL
BBFBFBBLLL
BFFBBBFRLL
BFBBFFBRLR
FFBBFFFLRL
BFBFFBBLLR
BFFFFFBLLL
FBBFFFFLLR
BBFBFBBRLL
BFBBBFBRRR
BFFBBBBRLL
BFBBBFFRRR
FFBFFBBRRR
BFFFBBFLRL
FFBFFFBRRL
FFBFBBFLRR
FFBBBBFLRL
BFFFBFFLLL
FBFBBBFRLR
BFBFBBFRLR
FBBFBFBLRL
BBFFBFBRRR
FBBBFBFRLR
BBFBBBBRLL
FFBBFFBRRL
FBFFFBBLRR
FBFFBBFRRR
FBFBBFFRLL
FBFBBBBRLL
FBBFBFFRRL
BBFBBFFLLL
FBBBFFBLRL
FFBFFBFLRL
BBFBFFBLLR
BBFFBBFRRR
FFBFBFBLLL
FBBBBFBLRR
BFFFBBBLRR
BFFBBFBLLL
FBFFBBFLRR
BFBBBBFLRL
BBFFFFBLLL
BFFFBBBRRR
FBFFFFFLLL
FBFBBFFLRR
FFBFBFBRRL
FBFBBFFLLL
FBFFBFBRLL
FBFFBFBLLR
BFFBFFFLRL
FFFBBBBLRR
BFFFFBBRLL
BFFFFFFRLL
BFBBFFFLLR
BFFFFBFRLL
BFFBFFBRRL
FBBFBBBRRR
FFBBFBFRRR
BBFBBFFLLR
FBFBFBFLRR
BFBFBFBRLR
FBBFFBFRRR
BBFBFFBRLR
BBFBBBFRLR
FFBFBBBRRL
BFBFBBBLLL
FBBBFBFRRL
FFBBFBFRLL
FFBFBBFRLR
FBBFBBFRLL
FFBFBFFLRL
FFBFFFFLLR
FFFBBFBLLL
BBFBBFBLRL
FBBFBBFLRR
FFFBBBBRLL
BBFBFBBLRR
FFFBBFBLRL
FBBFBFFLLR
FFBBFFBLRL
BBFBFFFRLL
FBBBFFFRRL
FBFFBFFLRR
FBBBBBFRRL
BFFFBFBLLL
FBFBBFFLRL
FBBFBBBRRL
BFBBBFBLRL
BFBBFBBRRR
FBBBBBBLRR
FFBFFBBLRL
FBBFFBBRLR
FBBBFBFLLR
BBFFBBFLLR
BBFBBFFRLL
FFBFFBFLLR
FBFBFFBRRL
FFBBBFFRLR
BFBBFFBLLR
BFFBBBBLLR
BBFBFBFLLL
BFFBBFFRRL
FFFBBBFRLR
FFBBBFBRLR
BFBFFBBRLL
FFBFBFBRLL
FBFFFFFLLR
FBBBFBBLRR
FBBBFBBLLL
BFFBBBFRRR
BFBFBFFLLR
FBBBBFBRLR
BFBBFFFRRR
BFBBBFFRRL
FFFBFBFLRL
FBBBBFFRRL
FBBBBBFLRR
BFFFBBFRRR
FBFBFFBLLR
FBFBFBFRLR
FFBBFFFRLR
FBFBBFBLRL
BBFBFFBRRL
FFBFBBFRLL
FBBFFBFLLR
FBBBBFBRRL
BFBBBBBRRL
BBFFFFFLRR
BBFFBBBLRL
BFFFFBBLRR
FBBFBFFLLL
FFFBBFBLLR
FBBBFFBLLL
BFFFBFBRRR
FFBFFFBRLR
BBFFBFFLRR
BBFFBFBRLL
FFBFBBBLRL
FBFBFBBRRR
BFBBFBFLLL
FFFBBBFLRR
BBFFBFBRRL
BFFFFFFLRL
BBFBFBBRRL
BBFBFFFLLR
FBBFFFBRRR
FFBBBBFRRR
FFBBFBBLLL
BFFBFFBRLL
BBFBFFFLRR
FBFBBFBLLR
FFBFBFBRRR
BBFFBFBLLL
FBBBBFFLRL
FBFBFFFLRR
BBFBBFBLRR
BFBBBFBLLL
FBFBFFFRRL
BBFFBBFRLL
BFFFFBFLRR
FBBBFBBRRR
BFFBFBFRLR
FBBFBFBLLR
FFBFFBBLLR
BFFFFBBLLL
FFFBBBFRLL
FBFFFFFRRL
BFFFBBFLRR
BFBFBBBLLR
BBFFBFFRRR
FBFBBBFRRL
FBFBBBBRLR
FBBBBFBLLR
BBFFFFBLRR
BFBFBFBLRR
BFBFBFFLLL
FFBFBFFRLL
FFBFFFFRRR
FBBBBFBLRL
FBBBBBBLRL
BFFBFBBRLR
FFFBFBFLLL
FFBBFBFLRR
BBFFFBBLLL
FBBFBFFRLL
BFBFFBFLRL
FBFBBBBLLL
BFFBBBFLRL
BBFFBBFRLR
FBFBFFFLLR
BFBFFFFRLL
BBFFBFFLRL
BFBFFFFLLR
FFBBBBBRRL
BFFFFFFLLL
BFFBFFBLRR
FFBFFFBLRL
FFBBFBBRLL
FBFBBBFRLL
FBBBFFFRRR
BFFBFFFLLR
FBFBFBFLRL
BBFFBFBRLR
BFBFFBBRRL
BFFBBBBRLR
BFBFBFBLRL
FFBFBFFLLR
FFFBBFBRLL
BFBBFFFRLR
BFBBFFBLRR
FFFBBBBRRL
FBBFBFFRLR
BFBBFBFLRL
FBFBFBFRLL
FBBFFFFRRR
BBFFFBFRLR
FFBBBFBRLL
FFBFBFFRLR
BFFFFFBRRR
FBBBBFBRLL
FBFFBFBLRR
FBBBBBBRRL
FBFBBBFRRR
FFBFBBBRLR
FBBBBBFLLL
BFFBFBFRRR
BFFBFFFLRR
BFFBFFBRRR
BFBFBFBRLL
BBFFBFFRLR
BFFFFBFRRL
FBFFBBFLLL
FBFBFFBRLR
BBFBFFBLLL
BBFBFBBLRL
BBFFBBBLLR
BBFBFFFLRL
FBFFFBFRRR
BBFFBBBRLL
BBFFFBFLRL
FBFFBFBRRL
BFFFFFFRRR
FBFFFFBRLR
BFBBBBBLRL
FBBFFFBLRR
BFFBFBFLLR
FBBFFBFLRR
BFFBBFBRRR
BFBBFFFLRL
FFBBBFBLRL
FFFBFBBLRL
BBFBFFFRRL
FFBFFFFRRL
BFBBBBBRLL
FBBFBFBLLL
FBBFBFFLRL
BFFBBFFRRR
BBFFFBBRRR
BFFFBFBLRL
BFFFFBBRRR
FBBFFFFRLR
BFBFBBBRLR
FBFBFBBRLR
FBBBFBBRLL
FFFBFBBRRL
BFBBBBBRLR
FFBFBBBRRR
BFFFFBFLLL
BFBFBFFRRR
BBFBBBFRRL
FFBFFFBLLR
BFBBBBFRRL
BBFFFBBLRR
FFBFBBBLLL
BFBBBFBRLR
FFBBFFBRRR
BFBFBBFLRR
BFBFFBFRRL
BBFFBFBLRR
BBFBBBBLRR
FFBBBFFRRL
FFFBBFFLRL
FFFBFBFRRR
BBFBBFBRRR
FFFBFBFRRL
BFBBFFBLLL
FBFBFFBLRL
FBBFBFFLRR
BBFBFFBRRR
FBFFBBBRRL
BFFBFFBLRL
FFFBBBFRRL
BFFFBFFLRR
FFBBBBFRRL
FFFBFBBLLR
BBFBFBFRRL
BFBFBFFLRL
FBFBBBFLRL
BFBBBBBLLR
FBFFFFFRLL
BFBFFBFRLR
BBFFBFBLRL
FBFFBFBRRR
BBFFFBFRRL
FBBFFFBLLL
BBFFFFBRLR
BFFBFBBRRL
FBFFFFBLRL
BBFFFFFRLL
BFFBFBBLRL
BBFFFFBLRL
BFFBBBBLRL
FBBFBFBRRL
BFFBFFFLLL
BFBFBBBRRR
FBBBBBBLLL
BFBBBFBRRL
FFBFFBBLLL
FFBBBBBRRR
BBFBBFBRLR
BFBBFFBLRL
FBFBBBBRRL
FFFBFBFLLR
BFFBBBBLLL
BFFFBBFRRL
FBBBFFBRRL
FFBFFBFLRR
FBFBFBBRRL
BBFFFBBLRL
FFBBFFBRLR
BFBFFBBRLR
BFBBFBBLRL
BFBBFFFRLL
BFFFFFBLRR
FFBBBBBLRR
FFFBBBBRRR
BBFBFFFRRR
FBFBBFBRRR
FBBFFFFLRL
FBFFBBBLRR
FBBBBFFRLR
FBBFFFFLRR
FBFFFFBLLR
FFBFBFFRRL
FFBBFFFLLR
BFFFFFFLRR
BBFFFFFRLR
FBFFFFBLLL
FBFBFFBRRR
FBBBBFFLRR
BFBBBBFRLL
BBFBFBFRLR
FFBFBBFRRR
FBFFFBBRLR
FFBFBFBLRL
FBBFFBFRLR
FFBBFBFLRL
FBBBBBBRRR
FFFBBFFRLL
BFFBFBFRRL
FBFFBBBRRR
FBFBFFBRLL
FFBFFFFLLL
FBFFBFFLRL
FFBBBFBLRR
FFFBBFFLRR
BBFFBFFLLR
FBFBBFBLLL
FFBBFBBRRL
BFFBBFFRLL
FFFBFBBRLR
BFFFFFFRRL
FBBBFBFLLL
FFBFBBFRRL
FBFBBFFRRL
BBFBFFFLLL
FBFFBBBLRL
BFBFFFBLLL
BFFBFFBRLR
BFFFBFFRLL
FFBFBBBRLL
FBBFBFBLRR
BBFBBFBRLL
FFBFBFFRRR
BBFFFFBRRL
BFFBBBBLRR
BFBFBFBRRL
BFFBBFBRLL
FBBFFBFRLL
FBFBBFFRLR
BFFBBBFLRR
BFFBBFBLRR
FFBFBFBLRR
FFBBBBFRLL
BFBFFBFLLL
FFFBBFFLLR
BFBFBFBRRR
BFFFBBBRRL
FFFBFFBRRR
FBFBBFBRRL
BBFBFBFRRR
BFFBFBFRLL
FBBBFFFRLR
FBBFFFBRLR
FBFBFBFLLR
BBFFBBFLLL
BFBBBFBRLL
FBFBBBBLRR
FBBFFBBLLL
BFFBBFBRLR
BFFFFFBRLR
FFFBBBBLRL
FFFBBFFRRR
BFFFFFBLRL
FBBBBFFLLR
BFBFFFBRLR
FBFBBFBLRR
FBBBFFFLLR
FBBBFFFLRL
BBFBBFFRLR
BFFBBFBRRL
BFBFBBBRLL
BBFBBFBLLL
BFBBFBFRRR
BBFFFBBRLL
FBBFBFBRLR
FFBBFFBLRR
FBFBBBBLLR
FBFFFBFRLL
FFFBBBBLLR
FBBFFFFRLL
BFFFFBFLLR
BBFBFBFLLR
FBBFFBBRLL
BFBBBBFRRR
FFFBBBFLRL
BFFFBBBLRL
FBBFFBFLRL
BFFBBBFRRL
FFBFFFBRRR
BFBFBBBRRL
FBFBFBBLRL
FFBBFFFLRR
FBBFBFBRLL
BBFBFBBRLR
BFBFFFBRLL
BFBFBBFLRL
BFBBFBBLRR
BFFFBBFRLL
BFFFFFFLLR
FFFBBFBRRR
FFBBFFBRLL
FBFFBFFLLL
BFFFBBBLLR
FBFFBBFRRL
FBBFBBBLLL
FBFBFBBRLL
FBBBFBFLRL
FFBFBBBLLR
FFBBBFBRRR
FFFBBFBLRR
FFBBFFFRRR
BFBBBBFLRR
FFBBBBBRLR
FBFBBFBRLR
FFBBBFFRLL
FBBFBFFRRR
FBFBFBFRRL
FBFFFFFRLR
FBBFFFBRLL
FBBFBBFRRR
BFBBBBBLLL
BFBFBFFRLR
FBFFFBBLRL
BBFFBBFLRR
FFBBFBFLLL
BFFFFBBLLR
FFBBFBBLRL
FBBBFFBLRR
BBFFFBFLRR
FFBFFFFLRL
FBFFBBFRLR
FBBFBBBRLR
FFBFFFFRLR
FBBBBBBRLR
BFFBFFBLLL
FBBBFBFLRR
BFBFFBBRRR
BFFFFFBLLR
BBFFFFBRLL
FBBFFBBRRR
FFFBBFBRLR
BFFBFFFRRR
BBFFBBFRRL
FFBBFBFRLR
BFFFBBBRLR
FFBFFBFRRL
FFBFFBBRRL
BFBFFFFLLL
BFBFFFBLRR
BBFFFBBLLR
BFBFBBBLRR
BFFBBFFLRL
FBFBFFFLRL
BBFFBFFRRL
FBBBBFBLLL
FFFBBBFLLR
BBFBBBBLLL
FFFBBFFRLR
BBFBFBBRRR
FFBBBBFRLR
BFFFBFBRLL
FFFBFBFRLR
BFBBBFFLLR
BFFBBBFLLL
BFFBBBBRRR
FBBBFFFLRR
FFBFBBFLRL
FFBBBBFLLL
FBFFFFBRRL
BFBFFBBLRR
BBFBBFFLRR
BFBBBBFRLR
BFFBFBFLRR
FFBBFBBLRR
BFBFBFFLRR
FFBBBFFLRL
FBFFBFFRLR
FFBBBFBRRL
FBBFFBBLLR
FFBBFBFLLR
FFBFFFFLRR
BFFBBFBLRL
BFBFFBFLLR
BFBFBBBLRL
FFBBFBBRRR
FFBFFBFRLR
FBBBFBBRLR
FFFBBBBLLL
BFFFBFFRLR
FBFFBBFLRL
FBBBBFFRRR
BBFBBBFLLL
BFFFFFBRLL
BFFBFFBLLR
BFFBBFFLLR
BFFBBFBLLR
FBFFFFBRLL
FBBFBBBLRL
BBFFFBBRLR
BBFBFFFRLR
FBFBFBFLLL
FBFFFFFLRR
FBFFBFBLLL
FBBFFFBRRL
FBFFFBFLLR
BFFFFBBRRL
BBFBBBFRRR
BBFFFFFRRL
BFBFFFBLRL
FBBFFBBRRL
FBFFFBFRRL
BFFFBFFLLR
FFBBFFFRRL
FFBFFFBLRR
BFFBFFFRLR
FFFBBFFLLL
BFFFBFBRRL
FFBBBFFRRR
BFBBBFBLLR
BFBBFBFLRR
FBFFFFBLRR
BFFFFBFRRR
BFBFFBFRLL
FBFFFFBRRR
BFBFBBFLLR
BFBBBFFLRL
BFBBFFBRRL
FBFFBBFLLR
BFBFFBFRRR
FFFBFBBLRR
FBBBBBFLLR
FBBFBBFLLL
BFFBFBBRRR
FBFFBFFRLL
BFFBBFFRLR
FFBFBFBLLR
FBFBFFFRRR
FBFFFBBLLL
BFBFFBFLRR
FFBFFBBLRR
FFBFBBFLLR
FFBBBBBLLL
BFFBBBBRRL
FFBBBFFLLR
FFBBBBBLLR
FBBBBBBLLR
FBFBFFBLRR
BFFBBFFLRR
FBBBFFFRLL
BFBFBBFLLL
FBFFFFFLRL
BFBBBFFRLL
FFBBBFFLRR
BBFFBBBLRR
BFBBFBFRLR
BBFFFFFRRR
BBFBFFBLRL
BFFFFBFRLR
FBFFBFFLLR
FFBBBBBRLL
BFFBFFFRLL
BFFBFBFLLL
BFFFBBBLLL
BFBFFFFRRR
BFFFFBBRLR
BFBBBBBLRR
BFBFFFBLLR
BFBBFBBLLL
FFBBFFFLLL
FBBBFBFRLL
FBBFBFBRRR
BFFFBFFRRL
BBFBBFBLLR
FFBFBFFLRR
BBFBBBFLRR
FBBFFBFRRL
BFFFBFFRRR
FFFBFBFLRR
FBBFFFFLLL
FBFFFFFRRR
FBFBFBBLLL
BBFFFBFRRR
BFFBFFFRRL
BFBFBBFRLL
FFBBBFFLLL
BBFFBBBRRR
BFBFFBBLLL
FFBFFBFLLL
FFFBBBFLLL
FBFFBBBLLR
BBFFBFBLLR
FBBBFBBLRL
FFBFFFBRLL
BBFBFBFLRL
BBFBFFBLRR
BBFFFFFLRL
BFBBBBFLLR
FBFFFBFRLR
FBBBBBBRLL
BFFFBFBRLR
BFBBFFBRLL
FFFBFBBLLL
FBFBBBFLLL
FBBBFBBRRL
FBFFFBFLLL
FBBBBBFRLL
BFFFFFFRLR
BFFFBBFLLL
FBBBBFFLLL
FFBFFBFRLL
FBFFBFBRLR
BFBBFBBRRL
BFFBFBBRLL
BFBBFBFRRL
FFBFFBFRRR
BBFBFFBRLL
BFFBBBFRLR
FBBFFFFRRL
FBFBBBFLLR
BBFFBBBRRL
BFBBFFFLRR
BFFBFBBLRR
FFFBBBFRRR
FBBBFFBRLL
BFBBFBFLLR
FFBBFBFRRL
BFBBFBFRLL
BFBBFBBRLL
FFBFFFFRLL
FBFFBFBLRL
FBFBFFFLLL
FBBFBBFRLR
BBFFFBFLLL
FBBBFFBLLR
BFFFBFFLRL
BFFFBFBLRR
BBFBBBBLRL
FBFFFBBRRR
BFFBFBBLLL
BFFFFBBLRL
FBFBBBFLRR
FFFBBFBRRL
BFBBBFFRLR
BBFFFBFLLR
FBBBBBFRRR
BFFFBFBLLR
BFBFBFBLLL
FBBBFFBRRR
FFBBBBFLRR
FBBFBBFRRL
FFBBFBBRLR
BBFBBBFLRL
BBFFFFBLLR
FFBFFBBRLL
BFBFFFFLRR
FBFFFBBLLR
FBBFFFBLRL
FBFBBBBRRR
FFBFFBBRLR
BFBBFBBLLR
FFBBFFBLLL
BBFBFBFLRR
BBFBBBFLLR
FBBBBFFRLL
FFFBBFFRRL
FFFBFBBRRR
BFBFFFFLRL
BFFBFBBLLR
FFFBFBFRLL
FBBBFBFRRR
BBFFFFFLLL
FBBBFBBLLR
FFBBBBBLRL
BBFFBFFRLL
FBBBFFFLLL
FBFFBBBRLL
FBBFFBBLRL
BFBFBFFRLL
FBFBFFFRLR
BBFFFFFLLR
BFFFBBFLLR
FFBFBBFLLL
FBFBBFFRRR
FFBBFBBLLR
BBFBFBBLLR
FFBFBFBRLR
FFBFBFFLLL
FBBFBBFLLR
BFBFBFBLLR
FBBFBBFLRL
BFBFBBFRRR
FBFBFFBLLL
BFBBBFBLRR
BFBFFFBRRR
FBFBFBBLRR
BFBBFFBRRR
FBFFFBFLRL
BFBBBFFLLL
FBFFBFFRRL
BFBFFFFRLR
BFBBBBFLLL
FBBFBBBRLL
BFBBBFFLRR
FBFBFBBLLR
FFFBBBBRLR
BFBFFFBRRL
BFBFBFFRRL
BBFBBBFRLL
FFBFFFBLLL
BFFFBBBRLL
BBFFBBFLRL
BBFBBBBLLR
FFBBBBFLLR
FBFFBBBRLR
FBFFBBBLLL
FBBFFFBLLR
FBBFBBBLLR
BFBBFBBRLR
BBFFBBBLLL
FBFBFBFRRR
BFFFFBFLRL
BBFBBFBRRL
BFBBFFFRRL
BFBFFFFRRL
BFBFFBBLRL
FBBBFFBRLR
FBBBBFBRRR
FFFBFFBRRL
BBFFFBBRRL
BBFFBFFLLL
FBFFFBBRRL
BBFFFFBRRR
BFBFBBFRRL
FBBFFBFLLL
FBFFFBFLRR
FBFBFFFRLL
FBFBBBBLRL
FBBFFBBLRR
BFFFBBFRLR
FBFBBFBRLL
BFFBBFFLLL
BFBBFFFLLL
BFBBBBBRRR
FFBBBFBLLR
BFFFFFBRRL
FFBFBBBLRR
BBFBBFFRRL
FBFBBFFLLR
FBFFBBFRLL
FBBBBBFRLR"""


def find_max(a, b):
    if a > b:
        r = (b, a)
    else:
        r = (a, b)
    return r


def get_seat_row(seat, rows):
    if rows[0] == rows[1] or len(seat) == 0:
        return rows[0]
    half = math.ceil((rows[1] - rows[0]) / 2)
    if seat[0] == "F":
        return get_seat_row(seat[1:], find_max(rows[0], rows[1] - half))
    else:
        return get_seat_row(seat[1:], find_max(rows[0] + half, rows[1]))


def get_seat_col(seat, cols):
    if cols[0] == cols[1] or len(seat) == 0:
        return cols[0]
    half = math.ceil((cols[1] - cols[0]) / 2)
    if seat[0] == "L":
        return get_seat_col(seat[1:], find_max(cols[0], cols[1] - half))
    else:
        return get_seat_col(seat[1:], find_max(cols[0] + half, cols[1]))


def get_seat(seat, cols=(0, 7), rows=(0, 127)):
    col = get_seat_col(seat[-3:], cols)
    row = get_seat_row(seat[:-3], rows)
    return col, row


def get_seat_id(col, row):
    return row * 8 + col


if __name__ == '__main__':
    seats = INPUT.split("\n")
    cols = (0, 7)
    rows = (0, 127)
    taken_seats = {
    }
    min_seat_id = 100000
    max_seat_id = 0
    for seat in seats:
        col, row = get_seat(seat, cols, rows)
        seat_id = get_seat_id(col, row)
        taken_seats[seat_id] = (row, col)
        if seat_id < min_seat_id:
            min_seat_id = seat_id
        if seat_id > max_seat_id:
            max_seat_id = seat_id
    for i in range(min_seat_id, max_seat_id):
        if i - 1 in taken_seats.keys() and i + 1 in taken_seats.keys() and i not in taken_seats.keys():
            print(i)
